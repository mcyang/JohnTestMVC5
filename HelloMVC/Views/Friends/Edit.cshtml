@*@model HelloMVC.Models.Friend*@
@model HelloMVC.ViewModels.FriendViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Friend</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.Label("Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group"> 
            @Html.Label("Birthday", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.birthday, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                @Html.ValidationMessageFor(model => model.birthday, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("BirthMonth", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.birthmonth, new { htmlAttributes = new { @class = "form-control", type = "month" } })
                @Html.ValidationMessageFor(model => model.birthmonth, "", new { @class = "text-danger" })
            </div>
        </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $('#datePicker')
            .datepicker({
                format: 'yyyy/mm/dd/'
            });
            //.on('changeDate', function (e) {
            //    // Revalidate the date field
            //    $('#eventForm').formValidation('revalidateField', 'date');
            //});

        //$('#eventForm').formValidation({
        //    framework: 'bootstrap',
        //    icon: {
        //        valid: 'glyphicon glyphicon-ok',
        //        invalid: 'glyphicon glyphicon-remove',
        //        validating: 'glyphicon glyphicon-refresh'
        //    },
        //    fields: {
        //        name: {
        //            validators: {
        //                notEmpty: {
        //                    message: 'The name is required'
        //                }
        //            }
        //        },
        //        date: {
        //            validators: {
        //                notEmpty: {
        //                    message: 'The date is required'
        //                },
        //                date: {
        //                    format: 'MM/DD/YYYY',
        //                    message: 'The date is not a valid'
        //                }
        //            }
        //        }
        //    }
        //});
    });
</script>